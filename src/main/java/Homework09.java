    /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */

/**
 *
 * @author MoaathAlrajab
 */
public class Homework09 {
    
    // ToDo 01:  Write an algorithm to solve the following problem
    /*
    The sequence of triangle numbers is generated by adding the natural numbers. 
    So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over one hundred divisors?

    73920 is the first triangle number to have over one hundred divisors
    */

    public static void main(String[] args) {
        int triNum = 1;    //triNum is all the natural numbers added together
        int divisors = 0; //divisors counts how many divisors triNum has
        int n = 1;      //n is the accumulator for adding the natural numbers
        
        
        while(divisors < 100){ //find triangle number with over 100 divisors
            divisors = 0;
            
            //count how many divisors there are in triNum
            for(int i = 1; i <= triNum; i++){
                 if(triNum % i == 0){
                     divisors++;
                     
                    }   
            }
            
            //when divisors is over 100, do not increment triNum
            if(divisors > 100){ 
                break;
            }
            
            //  for debugging
            //System.out.println("Triangle Number: " + triNum + " , Divisors: " + divisors);    
            
            n++;
            triNum += n;
        }
        System.out.println("Triangle Number: " + triNum + " , Divisors: " + divisors);
        //outputs 73920 with 112 divisors
    }

}
